name: Release
on:
  workflow_dispatch:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

jobs:
  check:
    uses: ./.github/workflows/check.yml

  build-release-game:
    runs-on: Windows-Latest
    steps:
      - name: Checkout git files
        uses: actions/checkout@v2

      - name: Setup Aftman Tools
        uses: ok-nick/setup-aftman@v0.4.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          cache: true

      - name: Build release game
        run: scripts/release-build.cmd

      - name: Upload release game build
        uses: alehechka/upload-tartifact@v2
        with:
          name: release-game-build
          path: out/rojo/game.rbxl

  deploy:
    runs-on: Windows-Latest
    needs: [check, build-release-game]
    permissions:
      pull-requests: write
      contents: write
      issues: write
    steps:
      - name: Checkout git files
        uses: actions/checkout@v2

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download release game build
        uses: alehechka/download-tartifact@v2
        with:
          name: release-game-build

      - name: Setup node v20.8.1
        uses: actions/setup-node@v2
        with:
          node-version: 20.8.1
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install node modules
        run: npm i

      - name: Install node CI modules
        run: npm ci

      - name: Release GitHub
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ROBLOSECURITY: ${{ secrets.ROBLOSECURITY }}
          MANTLE_AWS_ACCESS_KEY_ID: ${{ secrets.MANTLE_AWS_ACCESS_KEY_ID }}
          MANTLE_OPEN_CLOUD_API_KEY: ${{ secrets.MANTLE_OPEN_CLOUD_API_KEY }}
          MANTLE_AWS_SECRET_ACCESS_KEY: ${{ secrets.MANTLE_AWS_SECRET_ACCESS_KEY }}

      - name: Shutdown Roblox Servers
        if: ${{ vars.SHUTDOWN_WHEN_DEPLOY }}
        run: >
          curl -L -X POST 'https://apis.roblox.com/cloud/v2/universes/{universe}:restartServers'
            -H 'x-api-key: {your-api-key}'
            -H 'Content-Type: application/json'
            --data '{}'